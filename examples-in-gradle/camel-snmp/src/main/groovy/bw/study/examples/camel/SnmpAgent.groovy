/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package bw.study.examples.camel

import groovy.util.logging.Slf4j
import org.apache.camel.CamelContext
import org.apache.camel.Endpoint
import org.apache.camel.Exchange
import org.apache.camel.ExchangePattern
import org.apache.camel.builder.RouteBuilder
import org.apache.camel.component.snmp.SnmpComponent
import org.apache.camel.component.snmp.SnmpEndpoint
import org.apache.camel.impl.DefaultCamelContext
import org.apache.camel.builder.EndpointProducerBuilder
import org.snmp4j.PDU
import org.snmp4j.mp.SnmpConstants
import org.apache.camel.component.snmp.SnmpTrapProducer
import org.snmp4j.smi.OID
import org.snmp4j.smi.OctetString
import org.snmp4j.smi.VariableBinding

import java.time.Instant

@Slf4j
class SnmpAgent {

    static void main(String[] args) {
        System.out.println("this is a snmp agent")
        CamelContext camel = new DefaultCamelContext()
        camel.getShutdownStrategy().tap {
            it.setShutdownRoutesInReverseOrder(true)
            it.setShutdownNowOnTimeout(true)
            it.setTimeout(1)
        }
        camel.getGlobalOptions().put(Exchange.LOG_EIP_NAME, "bw.study.examples");
        camel.addRoutes(new RouteBuilder() {
            PDUMarshaller pduMarshaller = new PDUMarshaller()
            @Override
            void configure() throws Exception {
                from("timer:sendTrap?delay=1000&period=500&repeatCount=1")
                        .routeId('snmp.trap.listener')
                        .process {
                            PDU trap = new PDU()
                            trap.setType(PDU.SET);
                            trap.add(new VariableBinding(SnmpConstants.snmpTrapOID, new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.1'), new OctetString('localhost')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.2'), new OctetString('Test')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.3'), new OctetString('pod1')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.4'), new OctetString('snmpAgent')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.5'), new OctetString('new')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.6'), new OctetString('a new alarm')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.7'), new OctetString('a new alarm for test')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.8'), new OctetString('Major')))
                            trap.add(new VariableBinding(new OID('1.3.6.1.4.1.54373.1.1.5.1.1.1.9'), new OctetString(Instant.now().toString())))
                            it.getIn().setBody(trap)
                        }
                        .to("log:bw.study.examples?showAll=true&multiline=true")
                        .to("snmp:10.47.112.135:10162?protocol=tcp&type=TRAP" +
                                "&snmpVersion=${SnmpConstants.version2c}"  +
                                "&timeout=5000" +
                                "&retries=5")

                        .to("log:bw.study.examples?showAll=true&multiline=true")
            }

        })
        camel.addShutdownHook {
            System.out.println('Exiting')
        }
        camel.start()
        System.out.println("Camel Started : ${Instant.now().toString()}")
        Thread.sleep(600000)
        camel.stop()

    }

}
