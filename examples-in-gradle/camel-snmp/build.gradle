plugins {
    id 'groovy'

    id 'java'

    id 'application'
}

version 'unspecified'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.7'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
    testImplementation 'junit:junit:4.13.1'

    implementation platform('org.apache.camel:camel-bom:3.14.0')
    implementation('org.apache.camel:camel-core')
    implementation('org.apache.camel:camel-snmp')
    implementation('org.apache.camel:camel-jetty')
    implementation('org.apache.camel:camel-http')
    implementation('org.apache.camel:camel-log')
    implementation('org.snmp4j:snmp4j:2.6.3')
    implementation group: 'org.wintersleep.snmp', name: 'wintersleep-snmp-mib', version: '0.25'

    implementation platform('org.apache.logging.log4j:log4j-bom:2.17.1')
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-1.2-api'
    implementation 'org.apache.logging.log4j:log4j-jcl'
    implementation 'org.apache.logging.log4j:log4j-jul'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl'
    //implementation 'org.jsmiparser:jsmiparser-api:0.14'
}

application {
    // Define the main class for the application.
    mainClass = 'bw.study.examples.camel.SnmpAgent'
}

build {
    dependsOn compileGroovy
    dependsOn compileJava
}


task runSnmpMgr(type: JavaExec) {
    dependsOn clean
    dependsOn build
    group = "Execution"
    description = "Run the snmp manager with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "bw.study.examples.camel.SNMP4jTrapListener"
}

task runSnmpAgent(type: JavaExec) {
    dependsOn clean
    dependsOn build
    group = "Execution"
    description = "Run the snmp manager with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "bw.study.examples.camel.SNMP4JTrapSender"
}
